@model List<KartGeoJSONtest.Models.PositionModel>

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div class="py-2">
    <div class="container">
        <h1> Innmeldingsoversikt </h1>
    </div>
</div>

<div class="container py-5">
    <table class="table">
        <thead>
            <tr>
                <th>Latitude</th>
                <th>Longitude</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var position in Model)
            {
                <tr>
                    <td>@position.Latitude</td>
                    <td>@position.Longitude</td>
                    <td>@position.Description</td>
                </tr>
            }
        </tbody>

    </table
</div> 

@*
<div>
    @foreach (var position in Model)
    {
        <p><strong>Latitude:</strong>@position.Latitude</p>
        <p><strong>Longitude:</strong>@position.Longitude</p>
        <p><strong>Description:</strong>@position.Description</p>
    }
</div>
*@
<div id="map" style="height: 500px;"></div>

@section Scripts 
{
    <script>
        var map = L.map('map').setView([0, 0], 2);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy <a href="https://www.openstreetmap.org/copyright" > OpenStreetMap</a> contributors'
        }).addTo(map);

        var positions = @Json.Serialize(Model);

        positions.forEach(function (position) {
            var marker = L.marker([position.latitude, position.longitude]).addTo(map);


            // Show address in the popup
            var url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${position.latitude}&lon=${position.longitude}`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    var address = data.display_name ? data.display_name : "Address not found";
                    marker.bindPopup(`${position.description} <br>Address: ${address}`).openPopup();
                })
                .catch(error => {
                    marker.bindPopup(`${position.description} <br>Address: Not available`).openPopup();
                });
        });
       
    </script>
}
